version: '3.8'

services:
  # Redis service for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # PostgreSQL database (alternative to SQLite for production)
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ai_tennis
      POSTGRES_USER: ai_tennis_user
      POSTGRES_PASSWORD: ai_tennis_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # FastAPI backend application
  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ai_tennis_user:ai_tennis_password@db:5432/ai_tennis
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./uploads:/app/uploads
      - ./.env:/app/.env
    depends_on:
      - redis
      - db
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery worker for background tasks
  celery_worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://ai_tennis_user:ai_tennis_password@db:5432/ai_tennis
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./uploads:/app/uploads
      - ./.env:/app/.env
    depends_on:
      - redis
      - db
    restart: unless-stopped
    command: celery -A app.core.celery_app worker --loglevel=info

  # Celery Flower for monitoring (optional)
  flower:
    build: .
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    command: celery -A app.core.celery_app flower --port=5555

volumes:
  postgres_data:
  redis_data:
